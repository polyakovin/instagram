{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439-7\\\\Desktop\\\\SkillBox\\\\\\u0440\\u0435\\u043F\\u0435\\u0442\\u0438\\u0442\\u043E\\u0440\\\\instagram\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439-7\\\\Desktop\\\\SkillBox\\\\\\u0440\\u0435\\u043F\\u0435\\u0442\\u0438\\u0442\\u043E\\u0440\\\\instagram\\\\src\\\\Photo.js\";\nimport React, { Component } from 'react';\nimport Name from './Name.js';\nimport Like from './Like.js';\nimport Time from './Time.js';\nimport Back from './Back.js';\nimport AddComments from './AddComments.js';\nimport Comment from './Comment.js';\nimport { Link } from \"react-router-dom\";\nimport photos from './photos.json';\n\nclass Photo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [{\n        id: new Date() + Math.random(),\n        date: new Date(),\n        author: 'name',\n        text: 'text'\n      }, {\n        id: new Date() + Math.random(),\n        date: new Date(),\n        author: 'name',\n        text: 'text'\n      }, {\n        id: new Date() + Math.random(),\n        date: new Date(),\n        author: 'name',\n        text: 'text'\n      }] // photo:null\n\n    };\n  }\n\n  addComment(text) {\n    this.setState({\n      comments: [...this.state.comments, {\n        id: new Date() + Math.random(),\n        date: new Date(),\n        author: 'Andrei',\n        text\n      }]\n    }, () => localStorage.setItem('state', JSON.stringify(this.state)));\n  }\n\n  removeComment(id) {\n    this.setState({\n      comments: this.state.comments.filter(com => com.id !== id)\n    }, () => localStorage.setItem('state', JSON.stringify(this.state)));\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('state')) {\n      this.setState(_objectSpread({}, JSON.parse(localStorage.getItem('state'))));\n    }\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    const photo = photos.find(photo => photo.name === id);\n    const name = photo.name,\n          url = photo.url,\n          describtion = photo.describtion,\n          likesAmount = photo.likesAmount,\n          isLiked = photo.isLiked;\n    const comments = this.state.comments.map(function (item, i) {\n      return React.createElement(Comment, {\n        key: Date.now() + '_' + i,\n        comment: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, name, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Back, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: url,\n      alt: describtion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, describtion), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Like, {\n      isLiked: isLiked,\n      addLike: () => {\n        this.addLike.bind(this);\n      },\n      likesAmount: likesAmount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Time, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), comments, React.createElement(AddComments, {\n      addComment: this.addComment.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Photo;","map":{"version":3,"sources":["C:\\Users\\Андрей-7\\Desktop\\SkillBox\\репетитор\\instagram\\src\\Photo.js"],"names":["React","Component","Name","Like","Time","Back","AddComments","Comment","Link","photos","Photo","state","comments","id","Date","Math","random","date","author","text","addComment","setState","localStorage","setItem","JSON","stringify","removeComment","filter","com","componentDidMount","getItem","parse","render","props","match","params","photo","find","name","url","describtion","likesAmount","isLiked","map","item","i","now","addLike","bind"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\r\nimport Name from './Name.js';\r\nimport Like from './Like.js';\r\nimport Time from './Time.js';\r\nimport Back from './Back.js';\r\nimport AddComments from './AddComments.js';\r\nimport Comment from './Comment.js';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport photos from './photos.json';\r\n\r\n\r\nclass Photo extends Component {\r\n\r\n  state = {\r\n    comments: [\r\n      {\r\n        id: new Date()+Math.random(),\r\n        date: new Date(),\r\n        author: 'name',\r\n        text : 'text',\r\n      },\r\n       {\r\n        id: new Date()+Math.random(),\r\n        date: new Date(),\r\n        author: 'name',\r\n        text : 'text',\r\n      },\r\n       {\r\n        id: new Date()+Math.random(),\r\n        date: new Date(),\r\n        author: 'name',\r\n        text : 'text',\r\n      },\r\n    ]\r\n    // photo:null\r\n  };\r\n  \r\n  addComment(text){\r\n    this.setState({\r\n      comments:[ \r\n        ...this.state.comments,\r\n        {\r\n          id: new Date()+Math.random(),\r\n          date: new Date(),\r\n          author: 'Andrei',\r\n          text\r\n        }\r\n     ]\r\n    },() => localStorage.setItem('state', JSON.stringify(this.state)))\r\n   }\r\n\r\n   removeComment(id){\r\n    this.setState({\r\n      comments: this.state.comments.filter(com => com.id !== id)\r\n    }, () => localStorage.setItem('state', JSON.stringify(this.state)))\r\n  }\r\n\r\n\r\n    componentDidMount() {\r\n    if (localStorage.getItem('state')) {\r\n      this.setState({ ...JSON.parse(localStorage.getItem('state')) })\r\n    }\r\n   \r\n  }\r\n\r\n  render(){\r\n    const id = this.props.match.params.id;\r\n    const photo = photos.find((photo)=>photo.name===id);\r\n    const {name,url,describtion,likesAmount,isLiked} = photo;\r\n\r\n   const comments = this.state.comments.map(function(item , i){\r\n    return <Comment key= {Date.now()+'_'+i} comment = {item} />\r\n   });\r\n   \r\n  return (\r\n    <div className=\"photo\" >\r\n      {name}\r\n      <Link to=\"/\"><Back /></Link>\r\n      <img src={url} alt={describtion} />\r\n      <p>\r\n        {describtion}\r\n      </p>\r\n      <div>\r\n\t      <Like isLiked={isLiked} addLike={()=>{this.addLike.bind(this)}} likesAmount={likesAmount} />\r\n\t      <Time />\r\n        {\r\n          comments\r\n        }\r\n        <AddComments addComment={this.addComment.bind(this)} />\r\n      </div>\r\n    </div>\r\n   );  \r\n  }\r\n}\r\n\r\nexport default Photo;"]},"metadata":{},"sourceType":"module"}