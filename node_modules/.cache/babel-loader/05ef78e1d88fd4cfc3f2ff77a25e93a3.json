{"ast":null,"code":"// Filename: formurlencoded.js\n// Timestamp: 2016.01.18-15:36:37 (last modified)\n// Author(s): Bumblehead (www.bumblehead.com), JBlashill (james@blashill.com)\n//\n// http://www.w3.org/TR/html5/forms.html#url-encoded-form-data\n// input: {one:1,two:2} return: '[one]=1&[two]=2'\nvar formurlencoded = module.exports = function (data, opts) {\n  opts = typeof opts === 'object' ? opts : {};\n\n  function encode(value) {\n    return String(value).replace(/[^ !'()~\\*]*/g, encodeURIComponent).replace(/ /g, '+').replace(/[!'()~\\*]/g, function (ch) {\n      return '%' + ch.charCodeAt().toString(16).slice(-2).toUpperCase();\n    });\n  }\n\n  function keys(obj) {\n    var keys = Object.keys(obj);\n    return opts.sorted ? keys.sort() : keys;\n  }\n\n  function filterjoin(arr) {\n    return arr.filter(function (e) {\n      return e;\n    }).join('&');\n  }\n\n  function objnest(name, obj) {\n    return filterjoin(keys(obj).map(function (key) {\n      return nest(name + '[' + key + ']', obj[key]);\n    }));\n  }\n\n  function arrnest(name, arr) {\n    return filterjoin(arr.map(function (elem) {\n      return nest(name + '[]', elem);\n    }));\n  }\n\n  function nest(name, value) {\n    var type = typeof value,\n        f = null;\n\n    if (value === f) {\n      f = opts.ignorenull ? f : encode(name) + '=' + f;\n    } else if (/string|number|boolean/.test(type)) {\n      f = encode(name) + '=' + encode(value);\n    } else if (Array.isArray(value)) {\n      f = arrnest(name, value);\n    } else if (type === 'object') {\n      f = objnest(name, value);\n    }\n\n    return f;\n  }\n\n  return filterjoin(keys(data).map(function (key) {\n    return nest(key, data[key]);\n  }));\n};","map":null,"metadata":{},"sourceType":"script"}