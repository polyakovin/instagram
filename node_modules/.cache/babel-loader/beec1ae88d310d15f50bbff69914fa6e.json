{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Downloads/instagram/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport photos from './photos.json';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport counter from './reducers';\nconst initialState = localStorage['redux-store'] ? JSON.parse(localStorage['redux-store']) : {\n  counter: {\n    value: 0\n  },\n  photos\n};\n\nconst logger = store => next => action => {\n  let result;\n  console.groupCollapsed('dispatching', action.type);\n  console.log('prev state', store.getState());\n  console.log('action', action);\n  result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nconst saver = store => next => action => {\n  let result = next(action);\n  localStorage['redux-store'] = JSON.stringify(store.getState());\n  return result;\n};\n\nconst storeFactory = (initialState = {}) => {\n  return applyMiddleware(logger, saver) // middlewares\n  (createStore)(combineReducers({\n    counter\n  }), initialState);\n};\n\nconst store = storeFactory(initialState);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/andrey/Downloads/instagram/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","photos","BrowserRouter","createStore","applyMiddleware","combineReducers","Provider","counter","initialState","localStorage","JSON","parse","value","logger","store","next","action","result","console","groupCollapsed","type","log","getState","groupEnd","saver","stringify","storeFactory","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,SAAQC,aAAR,QAA4B,kBAA5B;AAEA,SAAQC,WAAR,EAAoBC,eAApB,EAAqCC,eAArC,QAA2D,OAA3D;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AAEA,MAAMC,YAAY,GAAGC,YAAY,CAAC,aAAD,CAAZ,GACfC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAAC,aAAD,CAAvB,CADe,GAEf;AACJF,EAAAA,OAAO,EAAE;AACPK,IAAAA,KAAK,EAAE;AADA,GADL;AAIJX,EAAAA;AAJI,CAFN;;AAQA,MAAMY,MAAM,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACxC,MAAIC,MAAJ;AACAC,EAAAA,OAAO,CAACC,cAAR,CAAuB,aAAvB,EAAsCH,MAAM,CAACI,IAA7C;AACAF,EAAAA,OAAO,CAACG,GAAR,CAAY,YAAZ,EAA0BP,KAAK,CAACQ,QAAN,EAA1B;AACAJ,EAAAA,OAAO,CAACG,GAAR,CAAY,QAAZ,EAAsBL,MAAtB;AACAC,EAAAA,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAb;AACAE,EAAAA,OAAO,CAACG,GAAR,CAAY,YAAZ,EAA0BP,KAAK,CAACQ,QAAN,EAA1B;AACAJ,EAAAA,OAAO,CAACK,QAAR;AACA,SAAON,MAAP;AACD,CATD;;AAUA,MAAMO,KAAK,GAAGV,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACvC,MAAIC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAjB;AACAP,EAAAA,YAAY,CAAC,aAAD,CAAZ,GAA8BC,IAAI,CAACe,SAAL,CAAeX,KAAK,CAACQ,QAAN,EAAf,CAA9B;AACA,SAAOL,MAAP;AACD,CAJD;;AAKA,MAAMS,YAAY,GAAG,CAAClB,YAAY,GAAG,EAAhB,KAAuB;AAC1C,SAAOJ,eAAe,CACnBS,MADmB,EACXW,KADW,CAAf,CACW;AADX,GAEJrB,WAFI,EAGJE,eAAe,CAAC;AAAEE,IAAAA;AAAF,GAAD,CAHX,EAG0BC,YAH1B,CAAP;AAID,CALD;;AAMA,MAAMM,KAAK,GAAGY,YAAY,CAAClB,YAAD,CAA1B;AAKAV,QAAQ,CAAC6B,MAAT,CACC,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEb,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,CADD,EAMEc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CAQA;AACA;AACA;;AACA7B,aAAa,CAAC8B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport photos from './photos.json';\n\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport {createStore,applyMiddleware, combineReducers} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport counter from './reducers'\n\nconst initialState = localStorage['redux-store']\n    ? JSON.parse(localStorage['redux-store'])\n    : {\n  counter: {\n    value: 0,  \n  },\n  photos\n};\nconst logger = store => next => action => {\n  let result;\n  console.groupCollapsed('dispatching', action.type);\n  console.log('prev state', store.getState());\n  console.log('action', action);\n  result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\nconst saver = store => next => action => {\n  let result = next(action);\n  localStorage['redux-store'] = JSON.stringify(store.getState());\n  return result;\n};\nconst storeFactory = (initialState = {}) => {\n  return applyMiddleware\n    (logger, saver) // middlewares\n    (createStore)\n    (combineReducers({ counter }), initialState);\n};\nconst store = storeFactory(initialState);\n\n\n\n\nReactDOM.render(( \n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>),\n\t document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}